/*
 * Kontur.Extern.Api.Public
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ru.skbkontur.sdk.extern.service.transport.swagger.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import ru.skbkontur.sdk.extern.service.transport.swagger.model.DraftMeta;
import ru.skbkontur.sdk.extern.service.transport.swagger.model.Link;

/**
 * Draft
 */

public class Draft {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("docflows")
  private List<Link> docflows = null;

  @SerializedName("documents")
  private List<Link> documents = null;

  @SerializedName("meta")
  private DraftMeta meta = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    NEW("new"),
    
    CHECKED("checked"),
    
    READYTOSEND("readyToSend"),
    
    SENT("sent");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("links")
  private List<Link> links = null;

  public Draft id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public Draft docflows(List<Link> docflows) {
    this.docflows = docflows;
    return this;
  }

  public Draft addDocflowsItem(Link docflowsItem) {
    if (this.docflows == null) {
      this.docflows = new ArrayList<Link>();
    }
    this.docflows.add(docflowsItem);
    return this;
  }

   /**
   * Get docflows
   * @return docflows
  **/
  @ApiModelProperty(value = "")
  public List<Link> getDocflows() {
    return docflows;
  }

  public void setDocflows(List<Link> docflows) {
    this.docflows = docflows;
  }

  public Draft documents(List<Link> documents) {
    this.documents = documents;
    return this;
  }

  public Draft addDocumentsItem(Link documentsItem) {
    if (this.documents == null) {
      this.documents = new ArrayList<Link>();
    }
    this.documents.add(documentsItem);
    return this;
  }

   /**
   * Get documents
   * @return documents
  **/
  @ApiModelProperty(value = "")
  public List<Link> getDocuments() {
    return documents;
  }

  public void setDocuments(List<Link> documents) {
    this.documents = documents;
  }

  public Draft meta(DraftMeta meta) {
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @ApiModelProperty(value = "")
  public DraftMeta getMeta() {
    return meta;
  }

  public void setMeta(DraftMeta meta) {
    this.meta = meta;
  }

  public Draft status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Draft links(List<Link> links) {
    this.links = links;
    return this;
  }

  public Draft addLinksItem(Link linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<Link>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public List<Link> getLinks() {
    return links;
  }

  public void setLinks(List<Link> links) {
    this.links = links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Draft draft = (Draft) o;
    return Objects.equals(this.id, draft.id) &&
        Objects.equals(this.docflows, draft.docflows) &&
        Objects.equals(this.documents, draft.documents) &&
        Objects.equals(this.meta, draft.meta) &&
        Objects.equals(this.status, draft.status) &&
        Objects.equals(this.links, draft.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, docflows, documents, meta, status, links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Draft {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    docflows: ").append(toIndentedString(docflows)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

