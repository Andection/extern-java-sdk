/*
 * Kontur.Extern.Api.Public
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ru.skbkontur.sdk.extern.rest.swagger.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.joda.time.DateTime;
import ru.skbkontur.sdk.extern.rest.swagger.model.Address;
import ru.skbkontur.sdk.extern.rest.swagger.model.AddressForeign;
import ru.skbkontur.sdk.extern.rest.swagger.model.Fio;
import ru.skbkontur.sdk.extern.rest.swagger.model.PassportInfo;

/**
 * EmployeeInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-01-19T09:43:00.717+03:00")
public class EmployeeInfo {
  @SerializedName("inn")
  private String inn = null;

  @SerializedName("fio")
  private Fio fio = null;

  @SerializedName("position")
  private String position = null;

  @SerializedName("phone")
  private String phone = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("birth-date")
  private DateTime birthDate = null;

  @SerializedName("birth-place")
  private String birthPlace = null;

  /**
   * Gets or Sets gender
   */
  @JsonAdapter(GenderEnum.Adapter.class)
  public enum GenderEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2);

    private Integer value;

    GenderEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GenderEnum fromValue(String text) {
      for (GenderEnum b : GenderEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<GenderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GenderEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GenderEnum read(final JsonReader jsonReader) throws IOException {
        Integer value = jsonReader.nextInt();
        return GenderEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("gender")
  private GenderEnum gender = null;

  @SerializedName("citizenship-code")
  private String citizenshipCode = null;

  @SerializedName("passport")
  private PassportInfo passport = null;

  @SerializedName("address-registration")
  private Address addressRegistration = null;

  @SerializedName("address-foreign")
  private AddressForeign addressForeign = null;

  public EmployeeInfo inn(String inn) {
    this.inn = inn;
    return this;
  }

   /**
   * Get inn
   * @return inn
  **/
  @ApiModelProperty(value = "")
  public String getInn() {
    return inn;
  }

  public void setInn(String inn) {
    this.inn = inn;
  }

  public EmployeeInfo fio(Fio fio) {
    this.fio = fio;
    return this;
  }

   /**
   * Get fio
   * @return fio
  **/
  @ApiModelProperty(value = "")
  public Fio getFio() {
    return fio;
  }

  public void setFio(Fio fio) {
    this.fio = fio;
  }

  public EmployeeInfo position(String position) {
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @ApiModelProperty(value = "")
  public String getPosition() {
    return position;
  }

  public void setPosition(String position) {
    this.position = position;
  }

  public EmployeeInfo phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @ApiModelProperty(value = "")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public EmployeeInfo email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @ApiModelProperty(value = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public EmployeeInfo birthDate(DateTime birthDate) {
    this.birthDate = birthDate;
    return this;
  }

   /**
   * Get birthDate
   * @return birthDate
  **/
  @ApiModelProperty(value = "")
  public DateTime getBirthDate() {
    return birthDate;
  }

  public void setBirthDate(DateTime birthDate) {
    this.birthDate = birthDate;
  }

  public EmployeeInfo birthPlace(String birthPlace) {
    this.birthPlace = birthPlace;
    return this;
  }

   /**
   * Get birthPlace
   * @return birthPlace
  **/
  @ApiModelProperty(value = "")
  public String getBirthPlace() {
    return birthPlace;
  }

  public void setBirthPlace(String birthPlace) {
    this.birthPlace = birthPlace;
  }

  public EmployeeInfo gender(GenderEnum gender) {
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @ApiModelProperty(value = "")
  public GenderEnum getGender() {
    return gender;
  }

  public void setGender(GenderEnum gender) {
    this.gender = gender;
  }

  public EmployeeInfo citizenshipCode(String citizenshipCode) {
    this.citizenshipCode = citizenshipCode;
    return this;
  }

   /**
   * Get citizenshipCode
   * @return citizenshipCode
  **/
  @ApiModelProperty(value = "")
  public String getCitizenshipCode() {
    return citizenshipCode;
  }

  public void setCitizenshipCode(String citizenshipCode) {
    this.citizenshipCode = citizenshipCode;
  }

  public EmployeeInfo passport(PassportInfo passport) {
    this.passport = passport;
    return this;
  }

   /**
   * Get passport
   * @return passport
  **/
  @ApiModelProperty(value = "")
  public PassportInfo getPassport() {
    return passport;
  }

  public void setPassport(PassportInfo passport) {
    this.passport = passport;
  }

  public EmployeeInfo addressRegistration(Address addressRegistration) {
    this.addressRegistration = addressRegistration;
    return this;
  }

   /**
   * Get addressRegistration
   * @return addressRegistration
  **/
  @ApiModelProperty(value = "")
  public Address getAddressRegistration() {
    return addressRegistration;
  }

  public void setAddressRegistration(Address addressRegistration) {
    this.addressRegistration = addressRegistration;
  }

  public EmployeeInfo addressForeign(AddressForeign addressForeign) {
    this.addressForeign = addressForeign;
    return this;
  }

   /**
   * Get addressForeign
   * @return addressForeign
  **/
  @ApiModelProperty(value = "")
  public AddressForeign getAddressForeign() {
    return addressForeign;
  }

  public void setAddressForeign(AddressForeign addressForeign) {
    this.addressForeign = addressForeign;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeInfo employeeInfo = (EmployeeInfo) o;
    return Objects.equals(this.inn, employeeInfo.inn) &&
        Objects.equals(this.fio, employeeInfo.fio) &&
        Objects.equals(this.position, employeeInfo.position) &&
        Objects.equals(this.phone, employeeInfo.phone) &&
        Objects.equals(this.email, employeeInfo.email) &&
        Objects.equals(this.birthDate, employeeInfo.birthDate) &&
        Objects.equals(this.birthPlace, employeeInfo.birthPlace) &&
        Objects.equals(this.gender, employeeInfo.gender) &&
        Objects.equals(this.citizenshipCode, employeeInfo.citizenshipCode) &&
        Objects.equals(this.passport, employeeInfo.passport) &&
        Objects.equals(this.addressRegistration, employeeInfo.addressRegistration) &&
        Objects.equals(this.addressForeign, employeeInfo.addressForeign);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inn, fio, position, phone, email, birthDate, birthPlace, gender, citizenshipCode, passport, addressRegistration, addressForeign);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeInfo {\n");
    
    sb.append("    inn: ").append(toIndentedString(inn)).append("\n");
    sb.append("    fio: ").append(toIndentedString(fio)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    birthPlace: ").append(toIndentedString(birthPlace)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    citizenshipCode: ").append(toIndentedString(citizenshipCode)).append("\n");
    sb.append("    passport: ").append(toIndentedString(passport)).append("\n");
    sb.append("    addressRegistration: ").append(toIndentedString(addressRegistration)).append("\n");
    sb.append("    addressForeign: ").append(toIndentedString(addressForeign)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

