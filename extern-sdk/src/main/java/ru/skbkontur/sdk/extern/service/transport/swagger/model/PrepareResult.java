/*
 * Kontur.Extern.Api.Public
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ru.skbkontur.sdk.extern.service.transport.swagger.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import ru.skbkontur.sdk.extern.service.transport.swagger.model.CheckResultData;
import ru.skbkontur.sdk.extern.service.transport.swagger.model.Link;

/**
 * PrepareResult
 */

public class PrepareResult {
  @SerializedName("check-result")
  private CheckResultData checkResult = null;

  @SerializedName("links")
  private List<Link> links = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    CHECKPROTOCOLHASERRORS("checkProtocolHasErrors"),
    
    CHECKPROTOCOLHASONLYWARNINGS("checkProtocolHasOnlyWarnings"),
    
    ENCRYPTIONFAILED("encryptionFailed"),
    
    OK("ok");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  public PrepareResult checkResult(CheckResultData checkResult) {
    this.checkResult = checkResult;
    return this;
  }

   /**
   * Get checkResult
   * @return checkResult
  **/
  @ApiModelProperty(value = "")
  public CheckResultData getCheckResult() {
    return checkResult;
  }

  public void setCheckResult(CheckResultData checkResult) {
    this.checkResult = checkResult;
  }

  public PrepareResult links(List<Link> links) {
    this.links = links;
    return this;
  }

  public PrepareResult addLinksItem(Link linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<Link>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public List<Link> getLinks() {
    return links;
  }

  public void setLinks(List<Link> links) {
    this.links = links;
  }

  public PrepareResult status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrepareResult prepareResult = (PrepareResult) o;
    return Objects.equals(this.checkResult, prepareResult.checkResult) &&
        Objects.equals(this.links, prepareResult.links) &&
        Objects.equals(this.status, prepareResult.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(checkResult, links, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrepareResult {\n");
    
    sb.append("    checkResult: ").append(toIndentedString(checkResult)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

